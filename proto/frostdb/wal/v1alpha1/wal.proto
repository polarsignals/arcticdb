syntax = "proto3";

package frostdb.wal.v1alpha1;

import "frostdb/table/v1alpha1/config.proto";

// Record describes a single entry into the WAL.
message Record {
  reserved 2; // Previously used for transaction metadata.
  // Data of the record. This is intentionally nested so the only thing in
  // the entry can be a protobuf `oneof` and have forward compatilibity.
  Entry entry = 1;
}

// The data of a WAL Record. This is intentionally separate to allow using the
// `oneof` feature in a forward-compatible way.
message Entry {
  // The write-type entry.
  message Write {
    reserved 3; // Previously used for Arrow indication, but all writes are now Arrow.
    // Table name of the write.
    string table_name = 1;
    // Data is the data of the write.
    bytes data = 2;
    // Tx is the transaction ID of the write.
    uint64 tx = 4;
  }

  // The compaction entry.
  message Compaction {
    // Table name of the compaction.
    string table_name = 1;
    // Set of transactions that are compacted.
    map<uint64, bool> transactions = 2;
    // Level of the compaction.
    uint32 level = 3;
    // Offset into the file that the compacted data is located.
    int64 offset = 4;
    // Size of the compacted data.
    int64 size = 5;
  }

  // The new-table-block entry.
  message NewTableBlock {
    reserved 3, 4; // Previoulsy for schema versions that are now contained in the table config.
    // Table name of the new-table-block.
    string table_name = 1;
    // Block ID of the new-table-block.
    bytes block_id = 2;
    // Config of the new-table-block.
    frostdb.table.v1alpha1.TableConfig config = 5;
  }

  // The table-block persisted entry.
  message TableBlockPersisted {
    // Table name of the new-table-block.
    string table_name = 1;
    // Block ID of the new-table-block.
    bytes block_id = 2;
  }

  message Snapshot {
    // The tx the snapshot was taken at.
    uint64 tx = 1;
  }

  // The new-table entry.
  oneof entry_type {
    // Write is set if the entry describes a write.
    Write write = 1;
    // NewTableBlock is set if the entry describes a new-table-block.
    NewTableBlock new_table_block = 2;
    // TableBlockPersisted is set if the entry describes a table-block-persisted.
    TableBlockPersisted table_block_persisted = 3;
    // Snapshot is set if the entry describes a snapshot.
    Snapshot snapshot = 4;
    // Compaction is set if the entry describes a compaction.
    Compaction compaction = 5;
  }
}
